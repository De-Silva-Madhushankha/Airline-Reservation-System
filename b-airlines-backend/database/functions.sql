-- report -  Total revenue generated by each Aircraft type

DELIMITER $$

CREATE FUNCTION Revenue_By_Aircraft_Type(aircraft_model VARCHAR(50))
RETURNS DOUBLE
DETERMINISTIC
BEGIN
    DECLARE total_revenue DOUBLE DEFAULT 0;

    SELECT
        SUM(b.total_amount)
    INTO
        total_revenue
    FROM
        Aircraft a
    JOIN
        Model m ON a.model = m.model
    JOIN
        Flight f ON a.aircraft_id = f.aircraft_id
    JOIN
        Booking b ON f.flight_id = b.flight_id
    WHERE
        m.model = aircraft_model;

    RETURN total_revenue;
END $$

DELIMITER ;


-- report -  Given a date range, number of passengers travelling to a given destination

DELIMITER $$

CREATE FUNCTION passenger_count_by_destination(
    destination_code CHAR(3),
    start_date DATE,
    end_date DATE
)
RETURNS INT
DETERMINISTIC
BEGIN
    DECLARE passenger_count INT DEFAULT 0;

    SELECT
        COUNT(DISTINCT b.passenger_id)
    INTO
        passenger_count
    FROM
        Booking b
    JOIN
        Flight f ON b.flight_id = f.flight_id
    JOIN
        Route r ON f.route_id = r.route_id
    WHERE
        r.destination_code = destination_code
        AND f.departure BETWEEN start_date AND end_date;

    RETURN passenger_count;
END $$

DELIMITER ;

DELIMITER $$

CREATE FUNCTION Calculate_seat_price(
    flight_id_0 CHAR(36),
    row_num INT,
    column_num INT
) RETURNS DOUBLE
READS SQL DATA
BEGIN
    DECLARE base_price DOUBLE;
    DECLARE route_factor DOUBLE;
    DECLARE aircraft_factor DOUBLE;
    DECLARE seat_class_factor DOUBLE;
    DECLARE seat_price DOUBLE;
    DECLARE distances DOUBLE;
    DECLARE aircraft_model VARCHAR(50);
    DECLARE seat_class_id_0 INT;
    DECLARE aircraft_id_0 VARCHAR(10);

    SELECT config_value INTO base_price FROM Config WHERE config_key = 'base_price';
    SELECT config_value INTO route_factor FROM Config WHERE config_key = 'route_factor';

    SELECT aircraft_id INTO aircraft_id_0 FROM Flight WHERE flight_id = flight_id_0;

    SELECT model INTO aircraft_model FROM Aircraft WHERE aircraft_id = aircraft_id_0;
    
    SELECT price_multiplier INTO aircraft_factor 
    FROM Model WHERE model = aircraft_model;

    SELECT seat_class_id INTO seat_class_id_0
    FROM Seat 
    WHERE flight_id = flight_id_0 AND seat_row = row_num AND seat_column = column_num;

    SELECT price_multiplier INTO seat_class_factor 
    FROM Seat_class WHERE seat_class_id = seat_class_id_0 ;

    -- optimize this
    SELECT distance INTO distances FROM Route WHERE route_id = (SELECT DISTINCT route_id FROM Flight WHERE flight_id = flight_id_0);

    SET seat_price = base_price + (route_factor * distances) + aircraft_factor + seat_class_factor;

    RETURN seat_price;
END $$

DELIMITER ;
